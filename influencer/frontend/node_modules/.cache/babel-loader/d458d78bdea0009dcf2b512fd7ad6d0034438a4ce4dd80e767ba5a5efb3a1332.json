{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\\\uCD5C\\uC885\\uC0B0\\uCD9C\\uBB3C (1)\\\\\\uCD5C\\uC885\\uC0B0\\uCD9C\\uBB3C\\\\AI_Plaza-main\\\\influencer\\\\influencer\\\\frontend\\\\src\\\\components\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [selectedVoice, setSelectedVoice] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [voices, setVoices] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log('Fetching config data from server...');\n        const response = await fetch('http://127.0.0.1:5000/config');\n        if (response.ok) {\n          const data = await response.json();\n          setVoices(Object.entries(data.voices).map(([label, value]) => ({\n            label,\n            value\n          })));\n          setLanguages(Object.entries(data.languages).map(([label, value]) => ({\n            label,\n            value\n          })));\n        } else {\n          console.error('Failed to fetch data from the server:', response.statusText);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    console.log('Voices:', voices);\n    console.log('Languages:', languages);\n  }, [voices, languages]);\n  const sendMessage = async () => {\n    try {\n      // Create a new message object for the user's message\n      const userMessage = {\n        type: 'user',\n        text: userInput\n      };\n\n      // Update the chatMessages state with the user's message\n      setChatMessages([...chatMessages, userMessage]);\n\n      // Send the user's message to the server\n      const requestBody = {\n        user_input: userInput,\n        selected_voice: selectedVoice,\n        selected_language: selectedLanguage\n      };\n      const response = await fetch('http://127.0.0.1:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n\n        // Create a new message object for the bot's response\n        const botMessage = {\n          type: 'bot',\n          text: responseData.text\n        };\n\n        // Update the chatMessages state with the bot's response\n        setChatMessages([...chatMessages, botMessage]);\n\n        // Play the audio (if needed)\n        const audio = new Audio('data:audio/mpeg;base64,' + responseData.audio);\n        audio.play();\n      } else {\n        console.error('Failed to fetch data from the server.');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  const handleKeyDown = event => {\n    // Check if Enter was pressed without shift key\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault(); // Prevents the default action of enter which is to insert a new line\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          onKeyDown: handleKeyDown // Use onKeyDown instead of onKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"voices\",\n        value: selectedVoice,\n        onChange: e => setSelectedVoice(e.target.value),\n        children: voices.map((voice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: voice.value,\n          children: voice.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"languages\",\n        value: selectedLanguage,\n        onChange: e => setSelectedLanguage(e.target.value),\n        children: languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language.value,\n          children: language.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"Ojql+a1ga2tJCiTNvZUROhNo5GI=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatComponent","_s","userInput","setUserInput","selectedVoice","setSelectedVoice","selectedLanguage","setSelectedLanguage","chatMessages","setChatMessages","voices","setVoices","languages","setLanguages","fetchData","console","log","response","fetch","ok","data","json","Object","entries","map","label","value","error","statusText","sendMessage","userMessage","type","text","requestBody","user_input","selected_voice","selected_language","method","headers","body","JSON","stringify","responseData","botMessage","audio","Audio","play","handleKeyDown","event","key","shiftKey","preventDefault","children","onChange","e","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","voice","index","language","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/최종산출물 (1)/최종산출물/AI_Plaza-main/influencer/influencer/frontend/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ChatComponent = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [selectedVoice, setSelectedVoice] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [voices, setVoices] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching config data from server...');\r\n        const response = await fetch('http://127.0.0.1:5000/config');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setVoices(Object.entries(data.voices).map(([label, value]) => ({ label, value })));\r\n          setLanguages(Object.entries(data.languages).map(([label, value]) => ({ label, value })));\r\n        } else {\r\n          console.error('Failed to fetch data from the server:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching data:', error);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Voices:', voices);\r\n    console.log('Languages:', languages);\r\n  }, [voices, languages]);\r\n\r\n  const sendMessage = async () => {\r\n    try {\r\n      // Create a new message object for the user's message\r\n      const userMessage = {\r\n        type: 'user',\r\n        text: userInput,\r\n      };\r\n\r\n      // Update the chatMessages state with the user's message\r\n      setChatMessages([...chatMessages, userMessage]);\r\n\r\n      // Send the user's message to the server\r\n      const requestBody = {\r\n        user_input: userInput,\r\n        selected_voice: selectedVoice,\r\n        selected_language: selectedLanguage,\r\n      };\r\n\r\n      const response = await fetch('http://127.0.0.1:5000/chat', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify(requestBody),\r\n});\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n\r\n        // Create a new message object for the bot's response\r\n        const botMessage = {\r\n          type: 'bot',\r\n          text: responseData.text,\r\n        };\r\n\r\n        // Update the chatMessages state with the bot's response\r\n        setChatMessages([...chatMessages, botMessage]);\r\n\r\n        // Play the audio (if needed)\r\n        const audio = new Audio('data:audio/mpeg;base64,' + responseData.audio);\r\n        audio.play();\r\n      } else {\r\n        console.error('Failed to fetch data from the server.');\r\n      }\r\n    } catch (error) {\r\n      console.error('An error occurred:', error);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    // Check if Enter was pressed without shift key\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      event.preventDefault(); // Prevents the default action of enter which is to insert a new line\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      <div>\r\n      <textarea\r\n        value={userInput}\r\n        onChange={(e) => setUserInput(e.target.value)}\r\n        onKeyDown={handleKeyDown} // Use onKeyDown instead of onKeyPress\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n      <select id=\"voices\" value={selectedVoice} onChange={(e) => setSelectedVoice(e.target.value)}>\r\n  {voices.map((voice, index) => (\r\n    <option key={index} value={voice.value}>\r\n      {voice.label}\r\n    </option>\r\n  ))}\r\n</select>\r\n<select id=\"languages\" value={selectedLanguage} onChange={(e) => setSelectedLanguage(e.target.value)}>\r\n  {languages.map((language, index) => (\r\n    <option key={index} value={language.value}>\r\n      {language.label}\r\n    </option>\r\n  ))}\r\n</select>\r\n      </div>\r\n      <div>\r\n  <textarea\r\n    value={userInput}\r\n    onChange={(e) => setUserInput(e.target.value)}\r\n  />\r\n  <button onClick={sendMessage}>Send</button>\r\n</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}