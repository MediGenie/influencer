{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\\\uCD5C\\uC885\\uC0B0\\uCD9C\\uBB3C (1)\\\\\\uCD5C\\uC885\\uC0B0\\uCD9C\\uBB3C\\\\AI_Plaza-main\\\\influencer\\\\influencer\\\\frontend\\\\src\\\\components\\\\ChatComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ChatComponent.css'; // Assume you have a CSS file for styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatComponent = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [selectedVoice, setSelectedVoice] = useState('');\n  const [selectedLanguage, setSelectedLanguage] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [voices, setVoices] = useState([]);\n  const [languages, setLanguages] = useState([]);\n  const [userName, setUserName] = useState('User');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log('Fetching config data from server...');\n        const response = await fetch('http://127.0.0.1:5000/config');\n        if (response.ok) {\n          const data = await response.json();\n          const voiceEntries = Object.entries(data.voices).map(([label, value]) => ({\n            label,\n            value\n          }));\n          const languageEntries = Object.entries(data.languages).map(([label, value]) => ({\n            label,\n            value\n          }));\n          setVoices(voiceEntries);\n          setLanguages(languageEntries);\n\n          // Set default selected values\n          setSelectedVoice(voiceEntries.length > 0 ? voiceEntries[0].value : '');\n          setSelectedLanguage(languageEntries.length > 0 ? languageEntries[0].value : '');\n        } else {\n          console.error('Failed to fetch data from the server:', response.statusText);\n        }\n      } catch (error) {\n        console.error('An error occurred while fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-config\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"voices\",\n        value: selectedVoice,\n        onChange: e => setSelectedVoice(e.target.value),\n        children: voices.map((voice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: voice.value,\n          children: voice.label\n        }, `voice-${voice.value}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"languages\",\n        value: selectedLanguage,\n        onChange: e => setSelectedLanguage(e.target.value),\n        children: languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: language.value,\n          children: language.label\n        }, `language-${language.value}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-name\",\n          children: msg.name || 'Bot'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message-text\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyDown: e => {\n          if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            sendMessage();\n          }\n        },\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: !userInput.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatComponent, \"yNIPJNMuZKioPOZ54Elr/09PMuM=\");\n_c = ChatComponent;\nexport default ChatComponent;\nvar _c;\n$RefreshReg$(_c, \"ChatComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatComponent","_s","userInput","setUserInput","selectedVoice","setSelectedVoice","selectedLanguage","setSelectedLanguage","chatMessages","setChatMessages","voices","setVoices","languages","setLanguages","userName","setUserName","fetchData","console","log","response","fetch","ok","data","json","voiceEntries","Object","entries","map","label","value","languageEntries","length","error","statusText","className","children","id","onChange","e","target","voice","index","fileName","_jsxFileName","lineNumber","columnNumber","language","msg","type","name","text","onKeyDown","key","shiftKey","preventDefault","sendMessage","placeholder","onClick","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/최종산출물 (1)/최종산출물/AI_Plaza-main/influencer/influencer/frontend/src/components/ChatComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './ChatComponent.css'; // Assume you have a CSS file for styles\r\n\r\nconst ChatComponent = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [selectedVoice, setSelectedVoice] = useState('');\r\n  const [selectedLanguage, setSelectedLanguage] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [voices, setVoices] = useState([]);\r\n  const [languages, setLanguages] = useState([]);\r\n  const [userName, setUserName] = useState('User');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        console.log('Fetching config data from server...');\r\n        const response = await fetch('http://127.0.0.1:5000/config');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          const voiceEntries = Object.entries(data.voices).map(([label, value]) => ({ label, value }));\r\n          const languageEntries = Object.entries(data.languages).map(([label, value]) => ({ label, value }));\r\n          \r\n          setVoices(voiceEntries);\r\n          setLanguages(languageEntries);\r\n          \r\n          // Set default selected values\r\n          setSelectedVoice(voiceEntries.length > 0 ? voiceEntries[0].value : '');\r\n          setSelectedLanguage(languageEntries.length > 0 ? languageEntries[0].value : '');\r\n        } else {\r\n          console.error('Failed to fetch data from the server:', response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('An error occurred while fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-config\">\r\n        <select id=\"voices\" value={selectedVoice} onChange={(e) => setSelectedVoice(e.target.value)}>\r\n          {voices.map((voice, index) => (\r\n            <option key={`voice-${voice.value}`} value={voice.value}>\r\n              {voice.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select id=\"languages\" value={selectedLanguage} onChange={(e) => setSelectedLanguage(e.target.value)}>\r\n          {languages.map((language, index) => (\r\n            <option key={`language-${language.value}`} value={language.value}>\r\n              {language.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        {chatMessages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.type}`}>\r\n            <span className=\"message-name\">{msg.name || 'Bot'}</span>\r\n            <span className=\"message-text\">{msg.text}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <textarea\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n              e.preventDefault();\r\n              sendMessage();\r\n            }\r\n          }}\r\n          placeholder=\"Type your message here...\"\r\n        />\r\n        <button onClick={sendMessage} disabled={!userInput.trim()}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}