{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\\\uCD5C\\uC885\\uC0B0\\uCD9C\\uBB3C (1)\\\\\\uCD5C\\uC885\\uC0B0\\uCD9C\\uBB3C\\\\AI_Plaza-main\\\\influencer\\\\influencer\\\\frontend\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = ({\n  voices,\n  languages\n}) => {\n  // You can use the voices and languages props here in your component\n  // For example, populate dropdown menus with the data.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"voices\",\n      children: voices.map((voice, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: voice.value,\n        children: voice.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"languages\",\n      children: languages.map((language, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: language.value,\n        children: language.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","voices","languages","children","id","map","voice","index","value","label","fileName","_jsxFileName","lineNumber","columnNumber","language","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/최종산출물 (1)/최종산출물/AI_Plaza-main/influencer/influencer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = ({ voices, languages }) => {\n  // You can use the voices and languages props here in your component\n  // For example, populate dropdown menus with the data.\n\n  return (\n    <div>\n      <select id=\"voices\">\n        {voices.map((voice, index) => (\n          <option key={index} value={voice.value}>\n            {voice.label}\n          </option>\n        ))}\n      </select>\n      <select id=\"languages\">\n        {languages.map((language, index) => (\n          <option key={index} value={language.value}>\n            {language.label}\n          </option>\n        ))}\n      </select>\n      {/* Rest of your component */}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EACrC;EACA;;EAEA,oBACEH,OAAA;IAAAI,QAAA,gBACEJ,OAAA;MAAQK,EAAE,EAAC,QAAQ;MAAAD,QAAA,EAChBF,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBR,OAAA;QAAoBS,KAAK,EAAEF,KAAK,CAACE,KAAM;QAAAL,QAAA,EACpCG,KAAK,CAACG;MAAK,GADDF,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACTd,OAAA;MAAQK,EAAE,EAAC,WAAW;MAAAD,QAAA,EACnBD,SAAS,CAACG,GAAG,CAAC,CAACS,QAAQ,EAAEP,KAAK,kBAC7BR,OAAA;QAAoBS,KAAK,EAAEM,QAAQ,CAACN,KAAM;QAAAL,QAAA,EACvCW,QAAQ,CAACL;MAAK,GADJF,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEV,CAAC;AAACE,EAAA,GAvBIf,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}